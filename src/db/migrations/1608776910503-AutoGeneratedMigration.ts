import {MigrationInterface, QueryRunner} from "typeorm";

export class AutoGeneratedMigration1608776910503 implements MigrationInterface {
    name = 'AutoGeneratedMigration1608776910503'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "password" character varying NOT NULL, "firstname" character varying NOT NULL, "lastname" character varying NOT NULL, "username" character varying NOT NULL, CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_78a916df40e02a9deb1c4b75ed" ON "user" ("username") `);
        await queryRunner.query(`CREATE TABLE "message" ("id" SERIAL NOT NULL, "content" character varying NOT NULL, "date" TIMESTAMP NOT NULL, "read" boolean NOT NULL, "senderId" integer, "receiverId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_blocked_user" ("userId_1" integer NOT NULL, "userId_2" integer NOT NULL, CONSTRAINT "PK_4df4a332d752dc6c9fa548085a9" PRIMARY KEY ("userId_1", "userId_2"))`);
        await queryRunner.query(`CREATE INDEX "IDX_1678523e3b41cfe60f65bb0df0" ON "user_blocked_user" ("userId_1") `);
        await queryRunner.query(`CREATE INDEX "IDX_4ea35a2c5e73a2fccd609e3899" ON "user_blocked_user" ("userId_2") `);
        await queryRunner.query(`ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_blocked_user" ADD CONSTRAINT "FK_1678523e3b41cfe60f65bb0df05" FOREIGN KEY ("userId_1") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_blocked_user" ADD CONSTRAINT "FK_4ea35a2c5e73a2fccd609e38997" FOREIGN KEY ("userId_2") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_blocked_user" DROP CONSTRAINT "FK_4ea35a2c5e73a2fccd609e38997"`);
        await queryRunner.query(`ALTER TABLE "user_blocked_user" DROP CONSTRAINT "FK_1678523e3b41cfe60f65bb0df05"`);
        await queryRunner.query(`ALTER TABLE "message" DROP CONSTRAINT "FK_71fb36906595c602056d936fc13"`);
        await queryRunner.query(`ALTER TABLE "message" DROP CONSTRAINT "FK_bc096b4e18b1f9508197cd98066"`);
        await queryRunner.query(`DROP INDEX "IDX_4ea35a2c5e73a2fccd609e3899"`);
        await queryRunner.query(`DROP INDEX "IDX_1678523e3b41cfe60f65bb0df0"`);
        await queryRunner.query(`DROP TABLE "user_blocked_user"`);
        await queryRunner.query(`DROP TABLE "message"`);
        await queryRunner.query(`DROP INDEX "IDX_78a916df40e02a9deb1c4b75ed"`);
        await queryRunner.query(`DROP TABLE "user"`);
    }

}
